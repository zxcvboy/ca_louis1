<?xml version="1.0" encoding="UTF-8" standalone="no"?><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>ca_louis1-parent</artifactId>
		<groupId>customer</groupId>
		<version>${revision}</version>
	</parent>

	<artifactId>ca_louis1</artifactId>
	<packaging>jar</packaging>

	<name>ca_louis1</name>

	<!-- ACTUAL DEPENDENCIES -->
	<dependencies>
		<!-- CDS SPRING BOOT STARTER -->
		<dependency>
			<groupId>com.sap.cds</groupId>
			<artifactId>cds-starter-spring-boot</artifactId>
		</dependency>

        <!-- ODATA PROTOCOL ADAPTER -->
        <!--
		<dependency>
			<groupId>com.sap.cds</groupId>
			<artifactId>cds-adapter-odata-v4</artifactId>
			<scope>runtime</scope>
		</dependency>
        -->
		<dependency>
			<groupId>org.xerial</groupId>
			<artifactId>sqlite-jdbc</artifactId>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.sap.cds</groupId>
			<artifactId>cds-starter-cloudfoundry</artifactId>
        </dependency>
        
         <!-- Z ODATA V2 PROTOCOL ADAPTER -->
        <dependency>
            <groupId>com.sap.cds</groupId>
            <artifactId>cds-adapter-odata-v2</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- CAP security 
         <dependency>
            <groupId>com.sap.cloud.security.xsuaa</groupId>
            <artifactId>xsuaa-spring-boot-starter</artifactId>
            <version>2.10.0</version>
         </dependency>-->
        <dependency>
            <groupId>com.sap.cds</groupId>
            <artifactId>cds-feature-xsuaa</artifactId>
        </dependency>

        <!-- xsuaa security-->
        <dependency> <!-- includes spring-security-oauth2 -->
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-jose</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-resource-server</artifactId>
        </dependency>
        <dependency>
            <groupId>com.sap.cloud.security.xsuaa</groupId>
            <artifactId>spring-xsuaa</artifactId>
            <version>2.8.13</version>
        </dependency>
        <dependency> <!-- new with version 1.5.0 -->
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-to-slf4j</artifactId>
        </dependency>

        <!-- SAP Cloud SDK(Louis) -->
        
        <dependency>
            <groupId>com.sap.cloud.sdk.cloudplatform</groupId>
            <artifactId>scp-cf</artifactId>
        </dependency>

        <dependency>
            <groupId>com.sap.cloud.sdk.s4hana</groupId>
            <artifactId>s4hana-all</artifactId>
        </dependency>
         <!-- SAP Cloud SDK workflow(Louis) -->
        <dependency>
            <groupId>com.sap.cloud.sdk.services</groupId>
            <artifactId>scp-workflow-cf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.olingo</groupId>
            <artifactId>olingo-odata2-api</artifactId>
            <version>2.0.11</version>
        </dependency>
         <!-- apach http client -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.13</version>
        </dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<!-- SPRING BOOT PLUGIN -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring.boot.version}</version>
				<configuration>
					<skip>false</skip>
				</configuration>
				<executions>
					<execution>
						<id>repackage</id>
						<goals>
							<goal>repackage</goal>
						</goals>
						<configuration>
							<classifier>exec</classifier>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- STEPS TO BUILD CDS MODEL AND GENERATE POJOs -->
			<plugin>
				<groupId>com.sap.cds</groupId>
				<artifactId>cds-maven-plugin</artifactId>
				<version>${cds.services.version}</version>
				<configuration>
					<nodeVersion>${node.version}</nodeVersion>
				</configuration>
				<executions>
					<execution>
						<id>cds.clean</id>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>

					<execution>
						<id>cds.install-node</id>
						<goals>
							<goal>install-node</goal>
						</goals>
						<configuration>
							<skip>${cdsdk-global}</skip>
							<downloadUrl>${node.url}</downloadUrl>
						</configuration>
					</execution>

					<execution>
						<id>install-cdsdk</id>
						<goals>
							<goal>install-cdsdk</goal>
						</goals>
						<configuration>
							<skip>${cdsdk-global}</skip>
							<version>${cdsdk.version}</version>
						</configuration>
					</execution>

					<execution>
						<id>cds.build</id>
						<goals>
							<goal>cds</goal>
						</goals>
						<configuration>
							<commands>
								<command>build</command>

								<command>deploy --to sqlite --dry &gt;
									"${project.basedir}/src/main/resources/schema.sql"</command>
							</commands>
						</configuration>
					</execution>

					<execution>
						<id>cds.generate</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<basePackage>cds.gen</basePackage>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<!-- A profile that uses global installation of @sap/cds-dk -->
		<profile>
			<id>cdsdk-global</id>
			<properties>
				<cdsdk-global>true</cdsdk-global>
			</properties>
		</profile>
	</profiles>
</project>